# Apollo客户端依赖于AppId https://github.com/ctripcorp/apollo/wiki/Java客户端使用指南
app:
  # 需要手动创建，或者直接用apollo默认给出的应用id
  id: jiiiiiin-order
apollo:
  # Apollo Meta Server https://github.com/ctripcorp/apollo/wiki/Java客户端使用指南#122-apollo-meta-server
  # meta server和config service是部署在同一个JVM进程，所以meta server的地址就是config service的地址。
  meta: http://localhost:8080
  # 本地缓存路径
  cacheDir: /Users/jiiiiiin/Documents/IdeaProjects/jiiiiiin-security/apollo-cache-dir
  # Cluster（集群）
  cluster: default
  bootstrap:
    # 注入默认application namespace的配置示例
    enabled: true
    # 把日志相关的配置（如logging.level.root=info或logback-spring.xml中的参数）也放在Apollo管理
    eagerLoad:
      enabled: true
  # Spring Placeholder的使用
  autoUpdateInjectedSpringProperties: true
spring:
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      # 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
      probability: 1.0
  zipkin:
    # 指定了 Zipkin 服务器的地址
    base-url: http://jiiiiiin-zipkin:9411/
  boot:
    admin:
      client:
        url: http://jiiiiiin-springboot-admin:5000
feign:
  hystrix:
    # Feign是自带断路器的，在D版本的Spring Cloud之后，它没有默认打开。需要在配置文件中配置打开它，在配置文件加以下代码
    enabled: true
management:
  endpoints:
    web:
      exposure:
       # http://localhost:8080/actuator/beans 页面出现404错误
        include: '*'
  endpoint:
    health:
      # 它暴露了一些默认不在Web暴露的Endpoint，这些默认只以JMX方式暴露。
      # 查询应用状态，如hystrix是否up
      show-details: always
    web:
      exposure:
        include: '*'
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000
logging:
  level:
    org.springframework.web.servlet.*: debug
